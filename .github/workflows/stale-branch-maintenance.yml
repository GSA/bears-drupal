name: Stale Branches

on:
  workflow_dispatch:
  schedule:
    - cron: '0 4 * * 1'
    
permissions:
  issues: write
  contents: write


jobs:
  stale-branch-cleanup:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3


    # - name: Checkout repository
    #   run: |
    #     echo "cloning the repo and initiating the usagov-2021 submodule"
    #     git clone git@github.com:GSA/px-bears-drupal.git

    - name: Install github command line tool
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Find stale branches
      run: |
        git branch -r |  grep -v "main\|release"
        # Define the threshold for stale branches (e.g., 30 days)
        export STALE_THRESHOLD_DAYS=30

        export CURRENT_DATE=$(date +%Y-%m-%d)  # Define and set the current date in the desired format
        # Run the git for-each-ref command and save the output to a variable
        export output=$(git branch -r |  grep -v "main\|release")
        echo "output is $output"
        # Initialize an empty array
        branch_list=()

        # Read lines one by one and append them to the array
        while IFS= read -r line; do
            branch_list+=("$line")
        done <<< "$output"
        echo "branch list is $branch_list"

        git fetch --all --prune 
        for branch in "${branch_list[@]}"; do
          now=$(date +'%s')
          commit_time=$(git log -1 --date=raw ${branch} | grep ^Date | awk '{print $2}')
          commit_days=$(( (${now} - ${commit_time}) / 86400 ))
          echo "Branch: $branch, Last Commit Date: $commit_time, Age: $commit_days days"

          # Check if the branch is stale
          if [ ${commit_days} -gt ${STALE_THRESHOLD_DAYS} ]; then
              git checkout $branch 
              current_branch=$(git branch --show-current)
              echo "current branch is $current_branch"
              echo $branch
              git pull $branch
            # Create a pull request to merge the stale branch into the main branch
              gh pr create --base "main" --head $branch --title  "[Stale Branch] - Please review $branch" --assignee "${Tech_lead}" --reviewer "${Tech_lead}" --body "Hi ${Tech_lead} This PR is ready for your review! This branch has been stale. Thank you!"
          fi
        done
      env:
        GITHUB_TOKEN: '${{ secrets.ADD_TO_PROJECT_PAT }}'
        Tech_lead: '${{ vars. TECH_LEAD}}'
  
# jobs:
#   stale_branches:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Stale Branches
#       uses: crs-k/stale-branches@v3.0.0
#       with:
#         repo-token: '${{ secrets.ADD_TO_PROJECT_PAT }}'
#         days-before-stale: 120
#         days-before-delete: 180
#         comment-updates: true
#         max-issues: 20
#         tag-committer: true
#         stale-branch-label: stale branch
#         compare-branches: 'info'
#         branches-filter-regex: '^((?!dependabot))'