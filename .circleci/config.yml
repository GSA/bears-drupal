version: 2.1
parameters:
  manual_deploy:
    type: boolean
    default: false

# Define the jobs we want to run for this project
jobs:
  build_and_deploy:
    machine:
      image: ubuntu-2004:202107-02

    steps:
      - run:
          name: Cloning the Repo and initiating the Submodule
          command: |
            echo "cloning the repo and initiating the usagov-2021 submodule"
            git clone -b "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL"
            cd px-bears-drupal
            git submodule init
            git submodule update
            cd usagov-2021
            git checkout dev
            git checkout 3ff7fb93a47daef6d4e33d3ec9beef72b8e386cd


      - run:
          name: Moving the bears app into usagov-2021 module
          command: |
            cd px-bears-drupal
            bash ./mv-bears-app.sh
            echo ".................."
            echo "moving the bears-app module into the usagov-2021 directory"
            mv  usagov_bears usagov-2021/web/modules/custom

      - run: 
          name: Pre-docker-build configurations
          command: |
            cd px-bears-drupal/usagov-2021
            mv .docker/Dockerfile-cms .
            sed -i 's/80/8080/g' Dockerfile-cms  
            sed -i 's/80/8080/g' .docker/src-cms/etc/nginx/partials/cms.conf.tmpl
            sed -i 's/80/8080/g' .docker/src-cms/etc/nginx/partials/www.conf.tmpl

      - run: 
          name: Building, tagging, pushing the Docker Image
          command: |
            export IMAGE_TAG=$( echo $CIRCLE_WORKFLOW_ID | cut -b -8 )
            export DOCKERREPO="ghcr.io/gsa/px-bears-drupal/bears-cms"
            cd px-bears-drupal/usagov-2021
            docker build -f ./Dockerfile-cms -t "$DOCKERREPO:$IMAGE_TAG" .
            echo "$CR_PAT" | docker login ghcr.io --username "$GH_USERNAME" --password-stdin
            docker push "$DOCKERREPO:$IMAGE_TAG"
            docker logout

      - run:
          name: Injecting container name to the manifest.yml
          command: |
            export IMAGE_TAG=$( echo $CIRCLE_WORKFLOW_ID | cut -b -8 )
            export DOCKERREPO="ghcr.io/gsa/px-bears-drupal/bears-cms"
            cd px-bears-drupal/usagov-2021
            sed -i "s#^    image: .*cms-latest*#    image: $DOCKERREPO:$IMAGE_TAG#" manifest.yml
            sed -i "s#^    - secauthsecrets##" manifest.yml
            sed -i "s#^  memory: 1.5G#  memory: 512M#" manifest.yml
            cat manifest.yml

      - run:
          name: Setup CF CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb "https://cli.run.pivotal.io/stable?release=debian64&source=github"
            sudo dpkg -i cf-cli_amd64.deb
            cf -v

      - run:
          name: Deploy the the app to cloud.gov
          command: |
            export IMAGE_TAG=$( echo $CIRCLE_WORKFLOW_ID | cut -b -8 )
            export DOCKERREPO="ghcr.io/gsa/px-bears-drupal/bears-cms"
            cf login -a https://api.fr.cloud.gov -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG"  -s "$CF_SPACE"
            cd px-bears-drupal/usagov-2021
            echo "$CR_PAT" | docker login ghcr.io --username "$GH_USERNAME" --password-stdin
            CF_DOCKER_PASSWORD=$( echo $CR_PAT) cf push cms  --docker-image "$DOCKERREPO:$IMAGE_TAG" --docker-username "$CF_USER"
            docker logout

      - run:
          name: Enable bears module
          command: |
            cf login -a https://api.fr.cloud.gov -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG"  -s "$CF_SPACE"
            cf ssh cms --command "/var/www/vendor/bin/drush state:set system.maintenance_mode 0 && \
                                  /var/www/vendor/bin/drush pm:uninstall usagov_login && \
                                  /var/www/vendor/bin/drush pm:enable usagov_bears_block && \
                                  /var/www/vendor/bin/drush pm:enable usagov_bears_content && \
                                  /var/www/vendor/bin/drush pm:enable usagov_bears_api && \
                                  /var/www/vendor/bin/drush pm:enable usagov_bears && \
                                  /var/www/vendor/bin/drush -y config:import --partial --source=modules/custom/usagov_bears/modules/usagov_bears_content/config/optional && \
                                  /var/www/vendor/bin/drush cr"
  
  component-library:
    machine:
      image: ubuntu-2004:202107-02

    steps:
      - run:
          name: Cloning the Repo and initiating the Submodule
          command: |
            echo "cloning the repo and initiating the usagov-2021 submodule"
            git clone -b "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL"
            cd px-bears-drupal
            git submodule init
            git submodule update

      - run:
          name: Setup CF CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb "https://cli.run.pivotal.io/stable?release=debian64&source=github"
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf login -a https://api.fr.cloud.gov -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG"  -s "$CF_SPACE"
            
      - run:
          name: Deploy Storybook
          command: |  
             cd px-bears-drupal/bears-app
             nvm install node --reinstall-packages-from=node
             npm i @craco/craco
             npm run build:storybook
             mv manifest.yml storybook-static/
             mv Staticfile storybook-static/
             mv nginx storybook-static/
             cd storybook-static
             echo "${storybook_username}:${storybook_password}" > Staticfile.auth
             cf push 

  deploy_waf:
    machine:
      image: ubuntu-2004:202107-02

    steps:
      - run:
          name: Cloning the Repo and initiating the Submodule
          command: |
            echo "cloning the repo and initiating the usagov-2021 submodule"
            git clone -b "$CIRCLE_BRANCH" "$CIRCLE_REPOSITORY_URL"
            cd px-bears-drupal
            git submodule init
            git submodule update


      - run:
          name: Injecting container name to the manifest.yml
          command: |
            cd px-bears-drupal/usagov-2021
            sed -i "s#^    image: .*waf-latest*#    image: ghcr.io/gsa/px-bears-drupal/bears-waf:latest#" manifest.yml
            sed -i "s#^    - secauthsecrets##" manifest.yml
            sed -i "s#^- name: waf#- name: bears-waf#" manifest.yml
            echo "      allow "$IP_S";      allow "$IP_1";      allow "$IP_3";      allow "$IP_4";      allow "$IP_5";      allow "$IP_6";      allow "$IP_7";      allow "$IP_8";      allow "$IP_9";      allow "$IP_10";      allow "$IP_BXL";      allow "$IP_2";" >> manifest.yml

      - run:
          name: Setup CF CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb "https://cli.run.pivotal.io/stable?release=debian64&source=github"
            sudo dpkg -i cf-cli_amd64.deb
            cf -v

      - run:
          name: Deploy the the app to cloud.gov
          command: |
            cf login -a https://api.fr.cloud.gov -u "$CF_USER" -p "$CF_PASSWORD" -o "$CF_ORG"  -s "$CF_SPACE"
            cd px-bears-drupal/usagov-2021
            echo "$CR_PAT" | docker login ghcr.io --username "$GH_USERNAME" --password-stdin
            CF_DOCKER_PASSWORD=$( echo $CR_PAT) cf push bears-waf  --docker-image "ghcr.io/gsa/px-bears-drupal/bears-waf:latest" --docker-username "$CF_USER"
            docker logout

# Orchestrate our job run sequence
workflows:
# This workflow only gets triggered when there is a push to `main` branch.
  cms_build_and_deploy_workflow:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only: 
                - main

  create-component-library-workflow:
    jobs:
      - component-library:
          filters:
            branches:
              only:
                - main

# deploy_waf_workflow gets only triggered when we manually enter 'manual_deploy' parameter and set it to true boolean value. 
  deploy_waf_workflow:
    when:
      and:
        - equal: [ true, << pipeline.parameters.manual_deploy >> ]
    jobs:
      - deploy_waf

